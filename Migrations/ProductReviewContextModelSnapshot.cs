// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductReviewSystemDemo.Models;

#nullable disable

namespace ProductReviewSystemDemo.Migrations
{
    [DbContext(typeof(ProductReviewContext))]
    partial class ProductReviewContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductReviewSystemDemo.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("product");
                });

            modelBuilder.Entity("ProductReviewSystemDemo.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Ratings")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("review");
                });

            modelBuilder.Entity("ProductReviewSystemDemo.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("ProductReviewSystemDemo.Models.Product", b =>
                {
                    b.HasOne("ProductReviewSystemDemo.Models.User", null)
                        .WithMany("Product")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProductReviewSystemDemo.Models.Review", b =>
                {
                    b.HasOne("ProductReviewSystemDemo.Models.Product", null)
                        .WithMany("Review")
                        .HasForeignKey("ProductId");

                    b.HasOne("ProductReviewSystemDemo.Models.Review", null)
                        .WithMany("Comments")
                        .HasForeignKey("ReviewId");

                    b.HasOne("ProductReviewSystemDemo.Models.User", null)
                        .WithMany("Review")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductReviewSystemDemo.Models.Product", b =>
                {
                    b.Navigation("Review");
                });

            modelBuilder.Entity("ProductReviewSystemDemo.Models.Review", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("ProductReviewSystemDemo.Models.User", b =>
                {
                    b.Navigation("Product");

                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
